{"meta":{"title":"seokwon","subtitle":"Seokwon}.github.io","description":"seokwon's blog","author":"seokwon","url":"https://wonn223.github.io"},"pages":[],"posts":[{"title":"CSS z-index 이해하기 (1) 쌓임맥락","slug":"zindex","date":"2018-01-14T09:38:02.000Z","updated":"2018-01-14T09:38:02.000Z","comments":true,"path":"2018/01/14/zindex/","link":"","permalink":"https://wonn223.github.io/2018/01/14/zindex/","excerpt":"","text":"css 작업을 하다 보면 특정 요소를 다른 요소보다 앞에 두고 싶을 때가 있다. 처음엔 position : relative | absolute를 써보고, 작동이 안 되는 것 같으면 z-index를 활용했는데, 문제는 가끔 z-index마저 먹히지 않는 상황이 있다는 것(…). 그 이유를 알지 못하다가 z-index rendering이란 키워드로 검색을 하던 차에 쌓임 맥락(stacking context)이란 것을 알게 되었다. 쌓임맥락HTML문서가 DOM에서 렌더링 트리로 변할 때까지 트리의 렌더 오브젝트(DOM에선 노드)는 문서에 적힌 위계를 그대로 가지고 여러 개의 층(stack)을 이룬다. 스택에서 볼 수 있는 층 간의 위계를 쌓임 순서/위계(stacking order)라고 하며 각 층에서 오브젝트들이 저마다 형성한 위계를 쌓임 맥락(stacking context)이라 한다. 층이 쌓이는 순서는 기본적으로 HTML문서에 선언된 위치에 따라 결정되지만, 레이어에 변화를 일으키는 css프로퍼티(position, z-index)에 따라 그 순서가 달라진다. 이는 브라우저의 렌더링 작업에도 영향을 미친다. (브라우저 렌더링 작업에 관한 글은 따로 정리.) philpwalton의 글 중.. 어떤 엘리먼트의 쌓임 맥락(stacking context)이 쌓임 순서(stacking order) 상 가장 낮은 곳에 있는 경우엔 z-index의 값이 1억이라도, 쌓임 순서가 높은 엘리먼트보다 화면 앞에 위치할 수 없다. 쌓임 맥락을 만드는 요소들 문서의 뿌리 요소 엘리먼트 html // 예제 position 속성이 있고, z-index를 auto가 아닌 정수값으로 지정한 엘리먼트 // 예제 opacity를 1보다 낮게 설정한 엘리먼트 z-index를 정수값 지정했고 flex속성을 가진 엘리먼트 z-index를 정수값 || auto이고, position:fixed를 가진 엘리먼트 예제우선 z-index는 요소에 position 프로퍼티가 있을 때만 유효하다. position 속성이 없으면 z-index를 높여도 기존의 화면이 달라지지 않는다. 123456789101112131415161718192021222324#box_1 &#123; width: 200px; height: 200px; position: relative; z-index: 99; background: goldenrod;&#125;#box_2 &#123; width: 200px; height: 200px; position: relative; z-index: 500; margin-top: -72px; background: darkgreen;&#125;#box_3 &#123; width: 200px; height: 200px; position: relative; z-index: 1; background: darkcyan;&#125; 왼쪽이 세 개의 id에 position과 z-index 모두 적용했을 때 모습이다. 초록색 박스(div_2)가 금색 박스보다 z-index가 높고 margin-top속성을 가지고 있어서 금색 박스(div_1)를 덮었다. 오른쪽의 경우는 초록색 박스의 position 속성을 껐을 때다. z-index 속성이 무효화되고, 초록색 박스의 margin-top 값만큼 청록색 박스가 끌려 올라간 것을 알 수 있다. position 속성이 없어진 초록색 박스는 1,3번 박스와 다른 스택 맥락을 갖게 되었기 때문에 자신의 z-index는 자신이 위치한 새로운 쌓임 맥락에서만 유효하다. 같은 쌓임 맥락에 있는 요소들 끼리의 쌓임 순서가 결정되는 법Smashing magazine에서 알려 준 기본 stack 형성 순위는 다음과 같다.5번으로 갈수록 화면 앞으로 나온다. 배경과 보더를 형성하는 엘리먼트 음수 값을 가진 css 프로퍼티가 있는 엘리먼트( margin : - 10px ) float이 아니며 display : block인 엘리먼트 float인 엘리먼트 인라인 속성 엘리먼트 (6. 포지션 속성이 있는 엘리먼트) 부모의 쌓임 맥락과 자식의 쌓임 맥락은 또 다르다.부모와 자식은 별개의 맥락을 형성하고, 자식은 부모의 쌓임 맥락을 따르게 된다. 12345678910// html&lt;div id=&quot;box1&quot;&gt; &lt;span class=&quot;red&quot;&gt;Red&lt;/span&gt;&lt;/div&gt;&lt;div id=&quot;box2&quot;&gt; &lt;span class=&quot;green&quot;&gt;Green&lt;/span&gt;&lt;/div&gt;&lt;div&gt; &lt;span class=&quot;blue&quot;&gt;Blue&lt;/span&gt;&lt;/div&gt; 12345678910111213141516171819202122232425262728293031323334353637383940414243// css.red, .green, .blue &#123; position: absolute; width: 100px; color: white; line-height: 100px; text-align: center;&#125;.red &#123; z-index: 999; top: 20px; left: 20px; background: red;&#125;.green &#123; z-index : 1000; // green이 red보다 z-index가 높아서 화면 제일 앞쪽에 와야한다. // 하지만.. top: 60px; left: 60px; background: green;&#125;.blue &#123; top: 100px; left: 100px; background: blue;&#125;#box1 &#123; position : relative; z-index : 1000; // red의 부모 요소가 green의 부모 요소보다 값이 크다. // 그래서 red가 화면 제일 앞쪽에 위치한다.&#125;#box2 &#123; position: relative; z-index : 999;&#125; Codepen으로 확인하기 display:float인 경우 포지션이 지정된 엘리먼트와 그렇지 않은 엘리먼트 사이에 위치한다. 마무리 …If you’re setting a z-index of a billion on an element and it’s not moving forward in the stacking order, take a look up its ancestor tree and see if any of its parents form stacking contexts 만약 어떤 요소에 z-index를 줬는데 변화가 일어나지 않았다면, position이 적용되었는지 확인하고 또 부모 요소에 쌓임 맥락이 형성되어 있는지 확인하면 z-index가 먹히지 않는 이유를 파악할 수 있겠다. 1) https://coding.smashingmagazine.com/2009/09/the-z-index-css-property-a-comprehensive-look/ &gt; smashingmagazine에서 제공하는 쌓임맥락 설명. 코드 예제와 z-index 적용된 사이트를 소개하고 있다. 2) https://mytory.net/archives/10997 &gt; 쌓임 맥락에 관한 기본적인 내용을 번역해 준 사이트 3) https://developer.mozilla.org/ko/docs/Web/CSS/Understanding_z-index/The_stacking_context MDN에서 제공하는 쌓임 맥락 이야기 4) https://gitlab.com/SeunghoLee/my-markup-project/issues/2 정리를 깔끔하게 해주신 개발지님 깃북","categories":[],"tags":[{"name":"z-index, css, 쌓임맥락, stacking context, position","slug":"z-index-css-쌓임맥락-stacking-context-position","permalink":"https://wonn223.github.io/tags/z-index-css-쌓임맥락-stacking-context-position/"}]},{"title":"Hello World","slug":"hello-world","date":"2018-01-13T09:59:07.000Z","updated":"2018-01-13T09:59:07.000Z","comments":true,"path":"2018/01/13/hello-world/","link":"","permalink":"https://wonn223.github.io/2018/01/13/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}]}